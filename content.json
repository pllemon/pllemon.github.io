{"pages":[{"title":"categories","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" 12let arr = [1,2,3,4]arr.push(5) 1 2 3 1 2 3 More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/10/16/hello-world/"},{"title":"vue + element-ui + vue-i18n 实现多语言切换","text":"项目需求：系统需要实现多语言切换 安装1npm install vue-i18n 创建相关文件 新建文件目录如下 12345678├—— App.vue├—— i18n│ ├—— i18n.js│ └—— langs│ ├—— cn.js│ ├—— en.js│ └—— index.js├—— main.js i18n.js 基本配置 12345678910111213import Vue from 'vue'import locale from 'element-ui/lib/locale'import VueI18n from 'vue-i18n'import messages from './langs'Vue.use(VueI18n)const i18n = new VueI18n({ locale: localStorage.getItem('systemLang') || 'cn', messages})locale.i18n((key, value) =&gt; i18n.t(key, value))export default i18n langs/index.js 导出不同语言包 123456import en from './en'import cn from './cn'export default { en, cn} langs/en.js 定义English语言包 123456789import enLocale from 'element-ui/lib/locale/lang/en'const en = { message: { 'hello': 'hello, world', }, ...enLocale}export default en langs/cn.js 定义中文语言包 123456789import zhLocale from 'element-ui/lib/locale/lang/zh-CN'const cn = { message: { 'hello': '你好，世界', }, ...zhLocale}export default cn 引入 main.js 记住要在vue实例里引入i18n1234567import i18n from './i18n/i18n'new Vue({ store, i18n, render: h =&gt; h(App)}).$mount('#app') 修改模板切换语言123456methods: { switchLang(val) { this.$i18n.locale = val localStorage.setItem('systemLang', val) }}","link":"/2019/10/18/myblog/"},{"title":"post title with whitespace","text":"title1content2 这是内容啦啦啦 1 2 3","link":"/2019/10/16/post-title-with-whitespace/"},{"title":"数组的基本方法小结","text":"项目需求：系统需要实现多语言切换 增删改push() / unshift()pull() / shift()splice()查找find() / findIndex() find() 找到第一个返回值为 true 的成员，返回该成员，否则返回 undefined findIndex() 找到第一个返回值为 true 的成员，返回该成员位置，否则返回 -11find((item, index, arr) =&gt; {}) 填充fill() fill(填充值*, 起始位置，结束位置) 如填充类型为对象，则是浅拷贝1[1, 1, 1].fill(4, 1, 2) // [1, 4, 1] 遍历entries() / keys() / values() entries() 遍历键值对、keys() 遍历键名、values() 遍历键值 三者皆返回一个遍历器对象，使用 for…of 进行遍历1234567891011121314151617for (let index of ['a', 'b'].keys()) { console.log(index);}// 0// 1for (let elem of ['a', 'b'].values()) { console.log(elem);}// 'a'// 'b'for (let [index, elem] of ['a', 'b'].entries()) { console.log(index, elem);}// 0 \"a\"// 1 \"b\" 检测every()some()filter()map()","link":"/2019/10/21/数组/"}],"tags":[{"name":"i18n","slug":"i18n","link":"/tags/i18n/"},{"name":"插件","slug":"插件","link":"/tags/插件/"},{"name":"ES6","slug":"ES6","link":"/tags/ES6/"},{"name":"数组","slug":"数组","link":"/tags/数组/"}],"categories":[{"name":"随笔","slug":"随笔","link":"/categories/随笔/"},{"name":"VUE","slug":"VUE","link":"/categories/VUE/"},{"name":"JAVASCRIPT","slug":"JAVASCRIPT","link":"/categories/JAVASCRIPT/"}]}